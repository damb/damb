#!/usr/bin/env bash

# Description: helper functions to manage my development docker container
# ----

_create_fifo() {
  # XXX(damb): required by `anymal_docker`
  local path_shutdown_fifo=/var/run/robot/shutdown_pipe
  sudo mkdir -p $(dirname "${path_shutdown_fifo}")
  test ! -p "${path_shutdown_fifo}" && sudo mkfifo --mode=666 "${path_shutdown_fifo}"
}

# Start the development container with the name "dev"
dev1_start() {
  _create_fifo
	docker start dev1
}

# Run a new development container with the name "dev"
dev1_run() {
	local tag="${1:-nightly}"
	local image="docker.anybotics.com/anybotics-infrastructure/docker-images/anymal-development:${tag}"
  
  _create_fifo

  # XXX(damb): we use `anymal_docker` to launch the container.
	dev-docker -x \
		-e "TERM=xterm-256color" \
		--name=dev1 \
		"${image}" \
    bash
}

# pull docker container from ANYbotics registry
dev1_pull() {
	local version_img="${1:-nightly}"

	bash -c "anymal_docker pull --stack dev ${version_img}"
}

# stop the dev container
dev1_stop() {
	docker kill dev1
	if [[ "$1" == "--rm" ]]; then
		docker rm dev1
	fi
}

# run a command in the dev container
dev1_exec() {
  if ! docker ps --format '{{.Names}}' | grep -q '^dev1$'; then
    echo "Container 'dev1' is not running. Starting it now ..."
    dev1_start
  fi

	docker exec -it -u $USER -w "/home/${USER}" dev1 $@ 
}

dev1() {
	if [[ $# -gt 0 ]]; then
		case "${1}" in
		"pull")
			shift
			dev1_pull $@
			;;
		"start")
			shift
			dev1_start $@
			;;
		"run")
			shift
			dev1_run $@
			;;
		"stop")
			shift
			dev1_stop $@
			;;
		"exec")
			shift
			dev1_exec $@
			;;
		esac
	else
		dev1_exec bash
	fi
}
